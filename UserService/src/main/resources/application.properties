server.port = 8081


# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:userservice
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=sa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


# Eureka Client Configuration
# If you don't give spring.application.name than it will give name as UNKNOWN
spring.application.name = USER-SERVICE
# eureka.instance.prefer-ip-address = true
# eureka.client.fetch-registry = true
# eureka.client.register-with-eureka = true
# eureka.client.service-url.defaultZone = http://localhost:8761/eureka

# Cloud/External Configuration
# you can make 15 to 21 line comment out if you are using external config right now commenting
spring.config.import=configserver:http://localhost:8085

# To change profiles you can use below properties
# spring.profiles.active = prod

# Actuator Configuration
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

# Resilience4j Circuit Breaker Configuration for "ratingHotelBreaker"
resilience4j.circuitbreaker.instances.ratingHotelBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.ratingHotelBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.ratingHotelBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.waitDurationInOpenState=6s
resilience4j.circuitbreaker.instances.ratingHotelBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.ratingHotelBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.slidingWindowType=COUNT_BASED

# Correct prefix: resilience4j.retry
resilience4j.retry.instances.ratingHotelService.max-attempts=3
resilience4j.retry.instances.ratingHotelService.wait-duration=5s

# Correct prefix: resilience4j.rateLimiter
resilience4j.rateLimiter.instances.userRateLimiter.limit-refresh-period=4s
resilience4j.rateLimiter.instances.userRateLimiter.limit-for-period=2
resilience4j.rateLimiter.instances.userRateLimiter.timeout-duration=0s

# OKTA configurations
okta.oauth2.issuer = https://dev-26878658.okta.com/oauth2/default
okta.oauth2.audience = api://default

spring.security.oauth2.resourceserver.jwt.issuer-uri = https://dev-26878658.okta.com/oauth2/default
spring.security.oauth2.client.registration.my-internal-client.provider = okta
spring.security.oauth2.client.registration.my-internal-client.authorization-grant-type = client_credentials
spring.security.oauth2.client.registration.my-internal-client.scope = internal
spring.security.oauth2.client.registration.my-internal-client.client-id = 0oap9b3fyg00GwVrR5d7
spring.security.oauth2.client.registration.my-internal-client.client-secret = gFgKoKiwhmpewc63x_PQhCaDT7Le8zO2jOJv0hROLOZRux7NClODD_lqwXEl9VVa


spring.security.oauth2.client.provider.okta.issuer-uri = https://dev-26878658.okta.com/oauth2/default